#!/bin/bash

### dependencies : grep , sed , mpv , curl , dmenu , awk , tail
file=$HOME/.cache/ani-dmenu-hist
anime_id=$(cat $file | tail -n 1 | awk '{print $1}')
ep_no=$(cat $file | tail -n 1 |awk '{print $2}')

Temp=$HOME/.cache/ani-dmenu-temp

##### this is a fork of ani-cli but for dmenu
##### credit to the developers of https://github.com/pystardust/ani-cli for all the functions used


search_anime() {
	search=$1
	titlepattern='<a href="/category/'

        curl -s "https://gogoanime.cm//search.html" \
                -G \
                -d "keyword=$search" |
        sed -n -E '
                s_^[[:space:]]*<a href="/category/([^"]*)" title="([^"]*)".*_\1_p
                '
}

search_eps () {
        # get available episodes for anime_id
        anime_id=$1

        curl -s "https://gogoanime.cm/category/$anime_id" |
        sed -n -E '
                /^[[:space:]]*<a href="#" class="active" ep_start/{
                s/.* '\''([0-9]*)'\'' ep_end = '\''([0-9]*)'\''.*/\2/p
                q
                }
                '
}


get_embedded_video_link() {
        # get the download page url
        anime_id=$1
        ep_no=$2

        # credits to fork: https://github.com/Dink4n/ani-cli for the fix
        curl -s "https://gogoanime.cm/$anime_id-episode-$ep_no" |
        sed -n -E '
                /^[[:space:]]*<a href="#" rel="100"/{
                s/.*data-video="([^"]*)".*/https:\1/p
                q
                }'
}

get_links () {
        embedded_video_url="$1"
        curl -s "$embedded_video_url" |
        sed -n -E '
                /^[[:space:]]*sources:/{
                s/.*(https[^'\'']*).*/\1/p
                q
                }
                '
}

open_episode () {
        anime_id=$1
        episode=$2
        embedded_video_url=$(get_embedded_video_link "$anime_id" "$episode")
        video_url=$(get_links "$embedded_video_url")

        case $video_url in
                *streamtape*)
                        # If direct download not available then scrape streamtape.com
                        BROWSER=${BROWSER:-firefox}
                        printf "scraping streamtape.com\n"
                        video_url=$(curl -s "$video_url" | sed -n -E '
                                /^<script>document/{
                                s/^[^"]*"([^"]*)" \+ '\''([^'\'']*).*/https:\1\2\&dl=1/p
                                q
                                }
                        ');;
        esac


                setsid -f mpv --http-header-fields="Referer: $embedded_video_url" "$video_url" >/dev/null 2>&1

}

final () {

	anime=$1
	ep=$2
        max=$(search_eps $anime_id)
	if [ $ep -lt 1 ] || [ $ep -gt $max ]
	then 
			echo "the ep is out of range" | dmenu >> /dev/null
			exit ;
	fi

	open_episode $anime $ep


}

########
##main##
########

##### options ########
op1="next"
op2="replay"
op3="previous"
op4="search"
op5="history"

wat=$(printf "%s\n%s\n%s\n%s\n%s" $op1 $op2 $op3 $op4 $op5 | dmenu) ;



case $wat in
        $op1 )
                ep_no=$(( ep_no + 1 ))

		;;
        $op2 )

                ### continue ;
                ;;
        $op3 )

                ep_no=$(( ep_no -1 ))
                ;;
        $op4 )
                search_anime $(echo | dmenu -p "Search Anime :" | tr ' ' '-' ) > $Temp
                anime_id=$(cat $Temp | dmenu -l 20 -p "Select Anime :")
                max=$(search_eps $anime_id)

                ep_no=$(echo | dmenu -p "ep no[max:"$max"]")
		rm $Temp
                ;;
	$op5)
		sector=$(cat $file | dmenu -l 10 -p "History :") 
		ep_no=$(echo $sector | awk '{print $2}' )
		anime_id=$(echo $sector | awk '{print $1}' )
		;;
        * )

                echo " right option not selected " | dmenu >> /dev/null
                exit
                ;;

        esac

# use the final function to play the anime episoide

final $anime_id $ep_no

## here , we check if the anime_id is in the file. if it is there , that line has to be deleted

LineToDelete="$(grep " $anime_id " $file )" 

if [ "$LineToDelete" != "" ] 
then
	## redirecting it to a temporary file so that nothing gets fucked up
	sed "s/$LineToDelete//" $file > "$file.temp"
	cat "$file.temp" > $file
	rm "$file.temp"
fi

printf " %s %s\n" $anime_id $ep_no >> $file
