#!/bin/bash

### dependencies : grep , sed , mpv , curl , dmenu

ani=$HOME/.cache/ani-dmenu/anime
ep=$HOME/.cache/ani-dmenu/ep
Temp=$HOME/.cache/ani-dmenu/temp

##### this is a fork of ani-cli but for dmenu
##### credit to the developers of https://github.com/pystardust/ani-cli for all the functions used


search_anime() {
	search=$1
	titlepattern='<a href="/category/'

        curl -s "https://gogoanime.vc//search.html" \
                -G \
                -d "keyword=$search" |
        sed -n -E '
                s_^[[:space:]]*<a href="/category/([^"]*)" title="([^"]*)".*_\1_p
                '
}

search_eps () {
        # get available episodes for anime_id
        anime_id=$1

        curl -s "https://gogoanime.vc/category/$anime_id" |
        sed -n -E '
                /^[[:space:]]*<a href="#" class="active" ep_start/{
                s/.* '\''([0-9]*)'\'' ep_end = '\''([0-9]*)'\''.*/\2/p
                q
                }
                '
}


get_embedded_video_link() {
        # get the download page url
        anime_id=$1
        ep_no=$2

        # credits to fork: https://github.com/Dink4n/ani-cli for the fix
        curl -s "https://gogoanime.vc/$anime_id-episode-$ep_no" |
        sed -n -E '
                /^[[:space:]]*<a href="#" rel="100"/{
                s/.*data-video="([^"]*)".*/https:\1/p
                q
                }'
}

get_links () {
        embedded_video_url="$1"
        curl -s "$embedded_video_url" |
        sed -n -E '
                /^[[:space:]]*sources:/{
                s/.*(https[^'\'']*).*/\1/p
                q
                }
                '
}

open_episode () {
        anime_id=$1
        episode=$2
        embedded_video_url=$(get_embedded_video_link "$anime_id" "$episode")
        video_url=$(get_links "$embedded_video_url")

        case $video_url in
                *streamtape*)
                        # If direct download not available then scrape streamtape.com
                        BROWSER=${BROWSER:-firefox}
                        printf "scraping streamtape.com\n"
                        video_url=$(curl -s "$video_url" | sed -n -E '
                                /^<script>document/{
                                s/^[^"]*"([^"]*)" \+ '\''([^'\'']*).*/https:\1\2\&dl=1/p
                                q
                                }
                        ');;
        esac


                setsid -f mpv --http-header-fields="Referer: $embedded_video_url" "$video_url" >/dev/null 2>&1

}

########
##main##
########

wat=$(printf "continue\nsearch" | dmenu) ;

if [ "$wat" = "continue" ]
then
	anime_id=$(cat $ani)
	
	ep_no=$(( $(cat $ep) + 1 ))
	max=$(search_eps $anime_id)
	
	echo $anime_id > $ani
	echo $ep_no > $ep
	
	if (( $ep_no >= 1 )) && (( $ep_no <= $max ))
	then
	
		open_episode $anime_id $ep_no
	else 
	
		echo "the last ep of $anime_id is ep $max , hope there's another season" | dmenu >> /dev/null
	fi



else

	search_anime $(echo | dmenu -p "search anime :" | tr ' ' '-' ) > $Temp
	anime_id=$(cat $Temp | dmenu) 

	max=$(search_eps $anime_id)
	ep_no=$(echo | dmenu -p "ep no[max:"$max"]")

	echo $anime_id > $ani
	echo $ep_no > $ep

	if (( $ep_no >= 1 )) && (( $ep_no <= $max ))
	then
	
		open_episode $anime_id $ep_no
	else 
		echo "the last ep of $anime_id is ep $max , hope there's another season" | dmenu >> /dev/null
	
	fi


fi
